name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: 20

      - run: npm install @holiday-jp/holiday_jp

      - uses: actions/github-script@v7
        id: is-holiday-expected
        with:
          script: |
            const holiday_jp = require(`${process.env.GITHUB_WORKSPACE}/node_modules/@holiday-jp/holiday_jp`)
            core.setOutput('holiday', holiday_jp.isHoliday(new Date()));
      - uses: ./
        id: is-holiday-actual
      - run: |
          if [ "${{ steps.is-holiday-expected.outputs.holiday == steps.is-holiday-actual.outputs.is-holiday }}" == true ]; then
            exit 0
          else
            exit 1
          fi

  test2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: 20

      - uses: ./
        id: is-holiday-actual
        with:
          date: '2024/2/12'

      - run: |
          if [ "${{ steps.is-holiday-actual.outputs.is-holiday }}" == true ]; then
            exit 0
          else
            exit 1
          fi

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: 20

      - run: yarn install

      - run: yarn biome format ./src/index.ts

  check-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: 20.x

      - run: yarn install

      - run: yarn build

      - name: Compare the expected and actual dist/ directories
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            exit 1
          fi

  merge:
    if: github.actor == 'dependabot[bot]' && github.ref_name != 'main'
    runs-on: ubuntu-latest
    needs: [test1, test2, lint, check-build]
    permissions:
      pull-requests: write
      contents: write
    steps:
      - run: |
          gh pr review --approve "$PR_URL"
          gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
